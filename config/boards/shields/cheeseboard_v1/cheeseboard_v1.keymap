#include <behaviors.dtsi>
#include <behaviors/socd.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0  
#define SOCD 1
#define FUNC 2
#define BOOT 3

&socd {
};


/ {    
    behaviors {
        socd2: socd2 {
            compatible = "zmk,behavior-socd";
            #binding-cells = <1>;
            bindings = <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
//       | F13 |  ESC  | F1 | F2 | F3 | F4 | F5 | F6 |     | F7 | F8 | F9 | F10 | F11 | F12 | PRTSC | SCRL | HOME |
//       | F14 | GRAVE | 1  | 2  | 3  | 4  | 5  | 6  |            |  7  |  8  |  9  |  0  |  -  |   BSPC   | END  |
//       | F15 |  TAB  | Q  | W  | E  | R  | T  |             | Y  | U  | I  | O  | P  |  [  |  ]  | BSLH  | DEL  |
// | F16 | F19 |  CAPS  | A  | S  | D  | F  | G  |          | H  | J  | K  | L  |  ;  |  '  |   ENTER     |  INS  | PGUP  |
// | F17 | F20 |  LSHIFT  | Z  | X  | C  | V  | B  |       |  N  |  M  |  ,  |  .  |  FSLH  |   RSHIFT   |   UP   | PGDN  |
// | F18 | F21 | LCTRL | WIN | FN | LALT |  SPACE  |       |   SPACE   | RALT | MENU | WIN | RTCRL  | LEFT | DOWN | RIGHT |
            bindings = <
               &kp KP_N7  &kp ESC    &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6              &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12   &kp PSCRN &kp C_PP  &kp HOME
               &kp KP_N8  &kp GRAVE  &kp N1    &kp N2    &kp N3    &kp N4    &kp N5    &kp N6              &kp N7    &kp N8    &kp N9    &kp N0    &kp MINUS &kp EQUAL &kp BSPC  &kp END
               &kp KP_N9  &kp TAB    &kp Q     &kp W     &kp E     &kp R     &kp T                         &kp Y     &kp U     &kp I     &kp O     &kp P     &kp LBKT  &kp RBKT  &kp BSLH  &kp DEL
    &studio_unlock  &kp KP_N4  &caps_word &kp A     &kp S     &kp D     &kp F     &kp G                         &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp APOS  &kp ENTER &kp INS   &kp PG_UP
    &kp KP_N2  &kp KP_N5  &kp LSHFT  &kp Z     &kp X     &kp C     &kp V     &kp B                                   &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp RSHFT &kp UP    &kp PG_DN
    &kp KP_N3  &kp KP_N6  &kp LCTRL  &kp LWIN  &mo FUNC &kp LALT  &kp SPACE                                         &kp SPACE &kp RALT  &mo FUNC &kp RWIN  &kp RCTRL &kp LEFT  &kp DOWN  &kp RIGHT
            >;
        };
        
        socd_layer {
            bindings = <
               &trans    &trans     &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6              &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12   &kp PSCRN &kp C_PP &trans
               &trans    &trans     &kp N1    &kp N2    &kp N3    &kp N4    &kp N5    &kp N6              &kp N7    &kp N8    &kp N9    &kp N0    &kp MINUS &kp EQUAL &kp BSPC  &kp END
               &trans    &kp TAB    &kp Q     &socd2 W     &kp E     &kp R     &kp T                         &kp Y     &kp U     &kp I     &kp O     &kp P     &kp LBKT  &kp RBKT  &kp BSLH  &kp DEL
    &trans    &trans    &caps_word &socd A   &socd2 S     &socd D     &kp F    &kp G                         &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp APOS  &kp ENTER &kp INS   &kp PG_UP
    &trans    &trans    &kp LSHFT  &kp Z     &kp X     &kp C     &kp V     &kp B                                   &kp N &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp RSHFT &kp UP &kp PG_DN
    &trans    &trans    &kp LCTRL  &kp LWIN  &mo FUNC &kp LALT  &kp SPACE                                         &kp SPACE &kp RALT  &mo FUNC &kp RWIN  &kp RCTRL &kp LEFT &kp DOWN &kp RIGHT
            >;
            
        };
        alt_layer {
            bindings = <
               &kp F16    &kp KP_NUM    &kp F1    &kp F2    &kp F3    &kp F4   &kp F5    &kp F6              &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12   &kp PSCRN &kp C_PP &trans
               &kp F17    &trans     &to DEFAULT &to SOCD &kp N3  &kp N4    &kp N5    &kp N6              &kp N7    &kp N8    &kp N9    &kp N0    &kp MINUS &kp EQUAL &kp BSPC  &kp END
               &kp F18    &kp TAB    &kp Q     &kp W     &kp E     &kp R     &kp T                         &kp Y     &kp U     &kp I     &kp O     &kp P     &kp LBKT  &kp RBKT  &kp BSLH  &kp DEL
    &kp F13    &kp F19    &caps_word &kp A &studio_unlock &kp D     &kt F    &kp G                         &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp APOS  &kp ENTER &kp INS   &kp PG_UP
    &kp F14    &kp F20    &kp LSHFT  &kp Z     &kp X     &kp C     &kp V     &kp B                                   &kp KP_NUM &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp RSHFT &kp C_VOL_UP &kp PG_DN
    &kp F15    &kp F21    &kp LCTRL  &kp LWIN  &mo FUNC  &mo BOOT  &kp SPACE                                         &kp SPACE &mo BOOT  &mo FUNC &kp RWIN  &kp RCTRL &kp C_PREV &kp C_VOL_DN &kp C_NEXT
            >;
            
        };
        boot_layer {
            bindings = <
               &kp F16    &bootloader &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6              &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12   &kp PSCRN &kp C_PP &bootloader
               &kp F17    &trans     &trans &trans &kp N3  &kp N4    &kp N5    &kp N6                       &kp N7    &kp N8    &kp N9    &kp N0    &kp MINUS &kp EQUAL &kp BSPC  &kp END
               &kp F18    &kp TAB    &kp Q     &kp W     &kp E     &kp R     &kp T                         &kp Y     &kp U     &kp I     &kp O     &kp P     &kp LBKT  &kp RBKT  &kp BSLH  &kp DEL
    &kp F13    &kp F19    &caps_word &kp A  &studio_unlock &kp D     &kt F    &kp G                         &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp APOS  &kp ENTER &kp INS   &kp PG_UP
    &kp F14    &kp F20    &kp LSHFT  &kp Z     &kp X     &kp C     &kp V     &kp B                                   &kp N &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp RSHFT &kp C_VOL_UP &kp PG_DN
    &kp F15    &kp F21    &kp LCTRL  &kp LWIN  &mo FUNC &kp LALT  &kp SPACE                                         &kp SPACE &kp RALT  &mo FUNC &kp RWIN  &kp RCTRL &kp C_PREV &kp C_VOL_DN &kp C_NEXT
            >;
            
        };
    };
};